/*
ELEMENT TO DISPAY
[
    {
        colName:<nom de la colonne>,
        destination:<id champ destinantion>,
        filters: [
            {
                column: <nom de la colonne>,
                value: <valeur attendu>,
            },
            {...},
        ],
    },
    ...
]

FIELD
destination_<month>_sum
destination_<month>_percent
*/

/* var ID_TABLE = "table[name=TAB_DATA]";

var elements = [
    {
        colName: "ConformiteA1",
        destination: "REAPlaceurPresentArriveeAvion",
        filters: [
            {
                column: "Type",
                value: "DÃ©part",
            }
        ],
    }
]; */

/* ===== HOW TO INCLUDE LIB ===== */
// var jQueryScript = document.createElement('script');
// jQueryScript.setAttribute('src','https://cdn.jsdelivr.net/gh/alaze-gedox/alz-qse-non-compliance@main/non-compliance.min.js');
// document.head.appendChild(jQueryScript);


// function getColumnIndex(column, idTable) {
//     var titles = [];
//     $(`${idTable} thead tr th`).toArray().forEach(
//         element => {titles.push(element.firstChild.nodeValue)}
//     );

//     index = titles.indexOf(column);
//     if (index < 0) {
//         throw new Error(`${column} is an invalid name`);
//     }

//     return index;
// }

// function testFilter(line, column, value, idTable) {
//     return line.cells.item(getColumnIndex(column, idTable)).innerHTML === value;
// }

// function getNonCompliance(elements, idTable) {
//     var lines = $(`${idTable} tbody tr`);
//     elements.forEach(element => {
//         lines.toArray().forEach(line => {
//             if (testFilter(line, element.colName, "N-C", idTable)) { // Test is value is N-C
//                 if (
//                     element.filters != 'undefined'
//                     || element.filters.every(filter => {
//                         return testFilter(line, filter.column, filter.value, idTable);
//                     })
//                 ) {
//                     // SUM
//                     var destinationSumField = getDestination(element.colName, element.destination, "Sum")
//                     destinationSumField.val(Number(destinationSumField.val()) + 1);
//                     // PERCENT
//                     var destinationPercentFiel = getDestination(element.colName, element.destination, "Percent");
//                     destinationPercentFiel.val(
//                         (Number(destinationSumField.val()) * 100) / lines.length
//                     );
//                 }
//             }
//         });
//     });
// }

/*
{
    "tableFieldId": {
        "destination": <str>,
        "filters": [
            {
                "tableFie<ldId": <str>,
                "value": <str>,
            }
        ]
    }
}
*/


function getTitles(idTable) {
    let titles = [];
    $(`${idTable} thead tr th`).toArray().forEach(
        element => titles.push(element.firstChild.nodeValue)
    );
    return titles;
}

function getDestination(colName, destination, suffix) {
    return destination != 'undefined' ? $(`#${destination}${suffix}`) : $(`#${colName}${suffix}`);
}

function isNC(line, index) {
    return $(line).find('td')[index].firstChild.nodeValue == "N-C";
}

function sumNC(lines, titles, elements) {
    lines.toArray().forEach(line => {
        for (var i=0; i < titles.length; i++) {
            let element = elements[titles[i]];
            if (typeof element != "undefined" && isNC(line, i)) {
                // var destinationSumField = getDestination(titles[i], element.destination, "Sum");
                let destinationSumField = $(`#${element.destination}Sum`);
                destinationSumField.val(Number(destinantionSumField.val()) + 1);
            }
        }
    });
}

function percentNC(lines, elements) {
    elements.forEach(element => {
        let destinationPercentField = $(`#${element.destination}Percent`);
        destinationPercentField.val(
            (Number($(`${element.destination}Sum`).val()) * 100) / lines.length
        );
    });
}

function getNonComplianceV2(idTable, elements) {
    let lines = $(`${idTable} tbody tr`);
    let titles = getTitles(idTable);

    // SUM
    sumNC(lines, titles, elements);

    // PERCENT
    percentNC(lines, elements);
}