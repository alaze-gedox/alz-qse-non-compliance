/*
ELEMENT TO DISPAY
[
    {
        colName:<nom de la colonne>,
        destination:<id champ destinantion>,
        filters: [
            {
                column: <nom de la colonne>,
                value: <valeur attendu>,
            },
            {...},
        ],
    },
    ...
]

FIELD
destination_<month>_sum
destination_<month>_percent
*/

/* var ID_TABLE = "table[name=TAB_DATA]";

var elements = [
    {
        colName: "ConformiteA1",
        destination: "REAPlaceurPresentArriveeAvion",
        filters: [
            {
                column: "Type",
                value: "DÃ©part",
            }
        ],
    }
]; */

/* ===== HOW TO INCLUDE LIB ===== */
// var jQueryScript = document.createElement('script');
// jQueryScript.setAttribute('src','https://cdn.jsdelivr.net/gh/alaze-gedox/alz-qse-non-compliance@main/non-compliance.min.js');
// document.head.appendChild(jQueryScript);


function getColumnIndex(column, idTable) {
    var titles = [];
    $(`${idTable} thead tr th`).toArray().forEach(
        element => {titles.push(element.firstChild.nodeValue)}
    );

    index = titles.indexOf(column);
    if (index < 0) {
        throw new Error(`${column} is an invalid name`);
    }

    return index;
}

function testFilter(line, column, value, idTable) {
    return line.cells.item(getColumnIndex(column, idTable)).innerHTML === value;
}

function isNC(column, line, idTable) {
    return testFilter(line, column, "N-C", idTable);
}

function getDestination(colName, destination, suffix) {
    return destination != 'undefined' ? $(`#${destination}${suffix}`) : $(`#${colName}${suffix}`);
}

function getNonCompliance(elements, idTable) {
    var lines = $(`${idTable} tbody tr`);
    elements.forEach(element => {
        lines.toArray().forEach(line => {
            if (isNC(element.colName, line, idTable)) {
                if (
                    element.filters != 'undefined'
                    || element.filters.every(filter => {
                        return testFilter(line, filter.column, filter.value, idTable);
                    })
                ) {
                    // SUM
                    var destinationSumField = getDestination(element.colName, element.destination, "Sum")
                    destinationSumField.val(Number(destinationField.val()) + 1);
                    // PERCENT
                    var destinationPercentFiel = getDestination(element.colName, element.destination, "Percent");
                    destinationPercentFiel.val(
                        (Number(destinationSumField.val()) * 100) / lines.length
                    );
                }
            }
        });
    });
}